{"version":3,"file":"pixi-tween.es.min.js","sources":["../src/Tween.js","../src/Easing.js","../src/TweenManager.js","../src/TweenPath.js","../src/index.js"],"sourcesContent":["import Easing from './Easing';\n\n/**\n * Fired when the tween starts. If the tween has a delay, this event fires when the delay time is ended.\n *\n * @event PIXI.tween.Tween#start\n */\n\n/**\n * Fired when the tween is over. If the .loop option it's true, this event never will be fired.\n * If the tween has an .repeat number, this event will be fired just when all the repeats are done.\n *\n * @event PIXI.tween.Tween#end\n */\n\n/**\n * Fired at every repeat cycle, if your tween has .repeat=5 this events will be fired 5 times.\n *\n * @event PIXI.tween.Tween#repeat\n * @param {number} repeat - Number of times this tween has repeated\n */\n\n/**\n * Fired at each frame\n *\n * @event PIXI.tween.Tween#update\n * @param {number} progress - 0-1 decimal value representing proportion of completion.\n * @param {number} elapsedTime - How much time in ms that has passed since the tween started.\n */\n\n/**\n * Fired only when it's used the .stop() method. It's useful to know when a timer is cancelled.\n *\n * @event PIXI.tween.Tween#stop\n */\n\n/**\n * If the pingPong option it's true, this events will be fired when the tweens returns back.\n *\n * @event PIXI.tween.Tween#pingpong\n */\n\n/**\n * Quickly configure a tween via an object / json\n *\n * @typedef {Object} PIXI.tween.Tween#tweenConfig\n * @property {Object} [from]\n * @property {Object} [to]\n * @property {number} [delay]\n * @property {function} [easing]\n * @property {boolean} [expire]\n * @property {boolean} [loop]\n * @property {Object} [path]\n * @property {boolean} [pathReverse]\n * @property {boolean} [pingPong]\n * @property {number} [repeat]\n * @property {number} [time]\n * @property {number} [speed]\n * @property {Object} [on]\n * @property {function} [on.end]\n * @property {function} [on.pingpong]\n * @property {function} [on.repeat]\n * @property {function} [on.start]\n * @property {function} [on.stop]\n * @property {function} [on.update]\n */\n\n/**\n * Tween class\n *\n * @class\n * @memberof PIXI.tween\n */\nexport default class Tween extends PIXI.utils.EventEmitter {\n    /**\n     * @param {*} target - Target object to tween\n     * @param {PIXI.tween.TweenManager} [manager] - Tween manager to handle this tween\n     * @param {PIXI.tween.Tween#tweenConfig} [config] - object to configure the tween\n     */\n    constructor(target, manager, config) {\n        super();\n\n        this.target = target;\n        if (manager) {\n            this.addTo(manager);\n        }\n\n        this.clear();\n        if (config) {\n            this.config(config);\n        }\n    }\n\n    /**\n     * Clears all class data, meaning that the tween will now do nothing if start is called\n     *\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    clear() {\n        /** @member {PIXI.tween.Easing} - Either an easing function from PIXI.tween.Easing or a custom easing */\n        this.easing = Easing.linear();\n\n        /** @member {boolean} - Set true if you want to delete this instance when the animation it's done */\n        this.expire = false;\n\n        /** @member {number} - Times to repeat this tween */\n        this.repeat = 0;\n\n        /** @member {boolean} - Set true if you want to loop this tween forever */\n        this.loop = false;\n\n        /** @member {number} - Set a delay time in milliseconds before the tween starts */\n        this.delay = 0;\n\n        /** @member {boolean} - Set true to repeat the tween from the end point back to the start point */\n        this.pingPong = false;\n\n        /** @member {PIXI.tween.TweenPath} - Set an instance of TweenPath to animate an object along the path */\n        this.path = null;\n\n        /** @member {boolean} - Set true to reverse the direction along the path */\n        this.pathReverse = false;\n\n        /** @member {number} - How long to animate this tween over */\n        this.time = 0;\n\n        /** @member {number} - The speed that the tween will play at. 0 effectively pauses it, 1 is normal speed */\n        this.speed = 1;\n\n        this._active = false;\n        this._isStarted = false;\n        this._isEnded = false;\n\n        this._to = {};\n        this._from = {};\n        this._resetFromOnStart = false;\n        this._delayTime = 0;\n        this._elapsedTime = 0;\n        this._progress = 0;\n        this._repeat = 0;\n        this._pingPong = false;\n\n        this._pathFrom = 0;\n        this._pathTo = 0;\n\n        this._chainTween = null;\n        this._resolvePromise = null;\n\n        return this;\n    }\n\n    /**\n     * Configures the tween via a config object\n     *\n     * @param {PIXI.tween.Tween#tweenConfig} config - object to configure the tween\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    config(config) {\n        if (!config || typeof config !== 'object') {\n            return this;\n        }\n\n        if (typeof config.from === 'object') {\n            this.from(config.from);\n        }\n        if (config.to && typeof config.to === 'object') {\n            this.to(config.to);\n        }\n        if (typeof config.delay === 'number') {\n            this.delay = config.delay;\n        }\n        if (config.easing) {\n            if (typeof config.easing === 'string' && Easing[config.easing]) {\n                this.easing = Easing[config.easing]();\n            } else if (typeof config.easing === 'function') {\n                this.easing = config.easing;\n            }\n        }\n        if (typeof config.expire === 'boolean') {\n            this.expire = config.expire;\n        }\n        if (typeof config.loop === 'boolean') {\n            this.loop = config.loop;\n        }\n        if (typeof config.path === 'object') {\n            this.path = config.path;\n        }\n        if (typeof config.pathReverse === 'boolean') {\n            this.pathReverse = config.pathReverse;\n        }\n        if (typeof config.pingPong === 'boolean') {\n            this.pingPong = config.pingPong;\n        }\n        if (typeof config.repeat === 'number') {\n            this.repeat = config.repeat;\n        }\n        if (typeof config.time === 'number') {\n            this.time = config.time;\n        }\n        if (typeof config.speed === 'number') {\n            this.speed = config.speed;\n        }\n\n        if (config.on && typeof config.on === 'object') {\n            if (typeof config.on.end === 'function') {\n                this.on('end', config.on.end);\n            }\n            if (typeof config.on.pingpong === 'function') {\n                this.on('pingpong', config.on.pingpong);\n            }\n            if (typeof config.on.repeat === 'function') {\n                this.on('repeat', config.on.repeat);\n            }\n            if (typeof config.on.start === 'function') {\n                this.on('start', config.on.start);\n            }\n            if (typeof config.on.stop === 'function') {\n                this.on('stop', config.on.stop);\n            }\n            if (typeof config.on.update === 'function') {\n                this.on('update', config.on.update);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * True if the tween is running\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    get active() {\n        return this._active;\n    }\n\n    /**\n     * How much time has passed on an active tween\n     *\n     * @member {number}\n     * @readonly\n     */\n    get elapsedTime() {\n        return this._elapsedTime;\n    }\n\n    /**\n     * 0-1 decimal value representing proportion of completion\n     *\n     * @member {number}\n     * @readonly\n     */\n    get progress() {\n        return this._progress;\n    }\n\n    /**\n     * True if the tween has started running\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    get isStarted() {\n        return this._isStarted;\n    }\n\n    /**\n     * True if a tween has ended running\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    get isEnded() {\n        return this._isEnded;\n    }\n\n    /**\n     * Add the tween to a manager\n     *\n     * @param {PIXI.tween.TweenManager} manager - Tween manager to handle this tween\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    addTo(manager) {\n        this.manager = manager;\n        this.manager.addTween(this);\n\n        return this;\n    }\n\n    /**\n     * Remove the tween from the manager if it has one\n     *\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    remove() {\n        if (!this.manager) {\n            return this;\n        }\n\n        this.manager.removeTween(this);\n\n        return this;\n    }\n\n    /**\n     * Starts the tween\n     *\n     * @param {Promise} resolve - Promise to resolve when the tween has ended\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    start(resolve) {\n        this._active = true;\n        this._isStarted = false;\n\n        if (this._resetFromOnStart) {\n            this._from = {};\n        }\n\n        if (!this._resolvePromise && resolve) {\n            this._resolvePromise = resolve;\n        }\n\n        return this;\n    }\n\n    /**\n     * Starts the tween, whilst returning a new promise\n     *\n     * @returns {Promise} - Promsie that will resolve when the tween has finished\n     */\n    startPromise() {\n        if (!Promise) {\n            return this.start();\n        }\n\n        if (this._resolvePromise) {\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve) => {\n            this.start(resolve);\n        });\n    }\n\n    /**\n     * Stop the tweens progress\n     *\n     * @fires PIXI.tween.Tween#stop\n     *\n     * @param {boolean} [end=false] - Force end to be called\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    stop(end = false) {\n        this._active = false;\n        this.emit('stop');\n\n        if (end) {\n            this._end();\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the end data for the tween\n     *\n     * @example\n     * tween.to({ x:100, y:100 });\n     *\n     * @param {Object} data - Object containing end point data for the tween\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    to(data = {}) {\n        this._to = data;\n\n        return this;\n    }\n\n    /**\n     * Set the start point data for the tween.\n     * If nothing is set, data is reset so that starting the tween will use the objects current state as the start point\n     *\n     * @example\n     * tween.from({ x:50, y:50 });\n     *\n     * @param {Object} [data] - Object containing start point data for the tween\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    from(data) {\n        if (!data || typeof data !== 'object') {\n            this._resetFromOnStart = true;\n            this._from = {};\n        } else {\n            this._resetFromOnStart = false;\n            this._from = data;\n        }\n\n        return this;\n    }\n\n    /**\n     * Chain another tween to play after this tween has ended\n     *\n     * @param {PIXI.tween.Tween} tween - Tween to chain\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    chain(tween) {\n        if (!tween) {\n            tween = new Tween(this.target);\n        }\n        this._chainTween = tween;\n\n        return tween;\n    }\n\n    /**\n     * Resets the tween to it's default state, but keeping any to and from data, so start can be called to replay the tween\n     *\n     * @returns {PIXI.tween.Tween} - This tween instance\n     */\n    reset() {\n        this._elapsedTime = 0;\n        this._progress = 0;\n        this._repeat = 0;\n        this._delayTime = 0;\n        this._isStarted = false;\n        this._isEnded = false;\n\n        if (this.pingPong && this._pingPong) {\n            const _to = this._to;\n            const _from = this._from;\n\n            this._to = _from;\n            this._from = _to;\n\n            this._pingPong = false;\n        }\n\n        return this;\n    }\n\n    /**\n     * Updating of the tween; usually automatically called by its manager\n     *\n     * @fires PIXI.tween.Tween#start\n     * @fires PIXI.tween.Tween#update\n     * @fires PIXI.tween.Tween#pingpong\n     * @fires PIXI.tween.Tween#repeat\n     *\n     * @param {number} deltaMS - Time elapsed in milliseconds from last update to this update.\n     */\n    update(deltaMS) {\n        if (!this._canUpdate() && (this._to || this.path)) {\n            return;\n        }\n\n        deltaMS *= this.speed;\n\n        if (this.delay > this._delayTime) {\n            this._delayTime += deltaMS;\n\n            return;\n        }\n\n        if (!this._isStarted) {\n            this._parseData();\n            this._isStarted = true;\n            this._isEnded = false;\n            this.emit('start');\n        }\n\n        const time = (this.pingPong) ? this.time / 2 : this.time;\n        let _to;\n        let _from;\n\n        if (time >= this._elapsedTime) {\n            const t = this._elapsedTime + deltaMS;\n            const ended = (t >= time);\n\n            this._elapsedTime = ended ? time : t;\n            this._apply(time);\n\n            const realElapsed = this._pingPong ? time + this._elapsedTime : this._elapsedTime;\n\n            this._progress = Math.min(realElapsed / this.time, 1);\n\n            this.emit('update', this._progress, realElapsed);\n\n            if (ended) {\n                if (this.pingPong && !this._pingPong) {\n                    this._pingPong = true;\n                    _to = this._to;\n                    _from = this._from;\n                    this._from = _to;\n                    this._to = _from;\n\n                    if (this.path) {\n                        _to = this._pathTo;\n                        _from = this._pathFrom;\n                        this._pathTo = _from;\n                        this._pathFrom = _to;\n                    }\n\n                    this.emit('pingpong');\n                    this._elapsedTime = 0;\n                    this._progress = 0.5;\n\n                    return;\n                }\n\n                if (this.loop || this.repeat > this._repeat) {\n                    ++this._repeat;\n                    this.emit('repeat', this._repeat);\n                    this._elapsedTime = 0;\n                    this._progress = 0;\n\n                    if (this.pingPong && this._pingPong) {\n                        _to = this._to;\n                        _from = this._from;\n                        this._to = _from;\n                        this._from = _to;\n\n                        if (this.path) {\n                            _to = this._pathTo;\n                            _from = this._pathFrom;\n                            this._pathTo = _from;\n                            this._pathFrom = _to;\n                        }\n\n                        this._pingPong = false;\n                    }\n\n                    return;\n                }\n\n                this._end();\n            }\n\n            return;\n        }\n    }\n\n    /**\n     * Called when the tween has finished\n     *\n     * @fires PIXI.tween.Tween#end\n     *\n     * @private\n     */\n    _end() {\n        this._isEnded = true;\n        this._active = false;\n        this.emit('end');\n        this._elapsedTime = 0;\n\n        if (this._chainTween) {\n            if (!this._chainTween.manager) {\n                this._chainTween.addTo(this.manager);\n            }\n            this._chainTween.start(this._resolvePromise);\n            this._resolvePromise = null;\n        } else if (this._resolvePromise) {\n            const resolvePromise = this._resolvePromise;\n\n            this._resolvePromise = null;\n            resolvePromise();\n        }\n    }\n\n    /**\n     * Parses the from and to data to extract details about how the tween should progress\n     *\n     * @private\n     */\n    _parseData() {\n        if (this._isStarted) {\n            return;\n        }\n\n        _parseRecursiveData(this._to, this._from, this.target);\n\n        if (this.path) {\n            const distance = this.path.totalDistance();\n\n            if (this.pathReverse) {\n                this._pathFrom = distance;\n                this._pathTo = 0;\n            } else {\n                this._pathFrom = 0;\n                this._pathTo = distance;\n            }\n        }\n    }\n\n    /**\n     * Updates the object with the tween settings\n     *\n     * @param {number} time - Time duration for the tween\n     * @private\n     */\n    _apply(time) {\n        _recursiveApplyTween(this._to, this._from, this.target, time, this._elapsedTime, this.easing);\n\n        if (this.path) {\n            const time = (this.pingPong) ? this.time / 2 : this.time;\n            const b = this._pathFrom;\n            const c = this._pathTo - this._pathFrom;\n            const d = time;\n            const t = time ? this._elapsedTime / d : 1;\n\n            const distance = b + (c * this.easing(t));\n            const pos = this.path.getPointAtDistance(distance);\n\n            this.target.position.set(pos.x, pos.y);\n        }\n    }\n\n    /**\n     * Can this tween be updated (must be active and have a target destination)\n     *\n     * @returns {boolean} - True if this tween can be updated\n     * @private\n     */\n    _canUpdate() {\n        return (this._active && this.target);\n    }\n}\n\nfunction _recursiveApplyTween(to, from, target, time, elapsedTime, easing) {\n    for (const k in to) {\n        if (!_isObject(to[k])) {\n            const b = from[k];\n            const c = to[k] - from[k];\n            const d = time;\n            const t = time ? elapsedTime / d : 1;\n\n            target[k] = b + (c * easing(t));\n        } else {\n            _recursiveApplyTween(to[k], from[k], target[k], time, elapsedTime, easing);\n        }\n    }\n}\n\nfunction _parseRecursiveData(to, from, target) {\n    for (const k in to) {\n        if (from[k] !== 0 && !from[k]) {\n            if (_isObject(target[k])) {\n                from[k] = {};\n                _parseRecursiveData(to[k], from[k], target[k]);\n            } else {\n                from[k] = target[k];\n            }\n        }\n    }\n}\n\nfunction _isObject(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n}\n","/* eslint-disable no-mixed-operators */\n\n/**\n * @namespace PIXI.tween.Easing\n */\nconst Easing = {\n    /**\n     * linear tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of linear easing function\n     */\n    linear() {\n        return function linear(t) {\n            return t;\n        };\n    },\n\n    /**\n     * inQuad tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inQuad easing function\n     */\n    inQuad() {\n        return function inQuad(t) {\n            return t * t;\n        };\n    },\n\n    /**\n     * outQuad tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outQuad easing function\n     */\n    outQuad() {\n        return function outQuad(t) {\n            return t * (2 - t);\n        };\n    },\n\n    /**\n     * inOutQuad tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutQuad easing function\n     */\n    inOutQuad() {\n        return function inOutQuad(t) {\n            t *= 2;\n            if (t < 1) return 0.5 * t * t;\n\n            return -0.5 * (--t * (t - 2) - 1);\n        };\n    },\n\n    /**\n     * inCubic tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inCubic easing function\n     */\n    inCubic() {\n        return function inCubic(t) {\n            return t * t * t;\n        };\n    },\n\n    /**\n     * outCubic tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outCubic easing function\n     */\n    outCubic() {\n        return function outCubic(t) {\n            return --t * t * t + 1;\n        };\n    },\n\n    /**\n     * inOutCubic tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutCubic easing function\n     */\n    inOutCubic() {\n        return function inOutCubic(t) {\n            t *= 2;\n            if (t < 1) return 0.5 * t * t * t;\n            t -= 2;\n\n            return 0.5 * (t * t * t + 2);\n        };\n    },\n\n    /**\n     * inQuart tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inQuart easing function\n     */\n    inQuart() {\n        return function inQuart(t) {\n            return t * t * t * t;\n        };\n    },\n\n    /**\n     * outQuart tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outQuart easing function\n     */\n    outQuart() {\n        return function outQuart(t) {\n            return 1 - (--t * t * t * t);\n        };\n    },\n\n    /**\n     * inOutQuart tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutQuart easing function\n     */\n    inOutQuart() {\n        return function inOutQuart(t) {\n            t *= 2;\n            if (t < 1) return 0.5 * t * t * t * t;\n            t -= 2;\n\n            return -0.5 * (t * t * t * t - 2);\n        };\n    },\n\n    /**\n     * inQuint tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inQuint easing function\n     */\n    inQuint() {\n        return function inQuint(t) {\n            return t * t * t * t * t;\n        };\n    },\n\n    /**\n     * outQuint tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outQuint easing function\n     */\n    outQuint() {\n        return function outQuint(t) {\n            return --t * t * t * t * t + 1;\n        };\n    },\n\n    /**\n     * inOutQuint tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutQuint easing function\n     */\n    inOutQuint() {\n        return function inOutQuint(t) {\n            t *= 2;\n            if (t < 1) return 0.5 * t * t * t * t * t;\n            t -= 2;\n\n            return 0.5 * (t * t * t * t * t + 2);\n        };\n    },\n\n    /**\n     * inSine tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inSine easing function\n     */\n    inSine() {\n        return function inSine(t) {\n            return 1 - Math.cos(t * Math.PI / 2);\n        };\n    },\n\n    /**\n     * outSine tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outSine easing function\n     */\n    outSine() {\n        return function outSine(t) {\n            return Math.sin(t * Math.PI / 2);\n        };\n    },\n\n    /**\n     * inOutSine tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutSine easing function\n     */\n    inOutSine() {\n        return function inOutSine(t) {\n            return 0.5 * (1 - Math.cos(Math.PI * t));\n        };\n    },\n\n    /**\n     * inExpo tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inExpo easing function\n     */\n    inExpo() {\n        return function inExpo(t) {\n            return t === 0 ? 0 : Math.pow(1024, t - 1);\n        };\n    },\n\n    /**\n     * outExpo tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outExpo easing function\n     */\n    outExpo() {\n        return function outExpo(t) {\n            return t === 1 ? 1 : 1 - Math.pow(2, -10 * t);\n        };\n    },\n\n    /**\n     * inOutExpo tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutExpo easing function\n     */\n    inOutExpo() {\n        return function inOutExpo(t) {\n            if (t === 0) return 0;\n            if (t === 1) return 1;\n            t *= 2;\n            if (t < 1) return 0.5 * Math.pow(1024, t - 1);\n\n            return 0.5 * (-Math.pow(2, -10 * (t - 1)) + 2);\n        };\n    },\n\n    /**\n     * inCirc tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inCirc easing function\n     */\n    inCirc() {\n        return function inCirc(t) {\n            return 1 - Math.sqrt(1 - t * t);\n        };\n    },\n\n    /**\n     * outCirc tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outCirc easing function\n     */\n    outCirc() {\n        return function outCirc(t) {\n            return Math.sqrt(1 - (--t * t));\n        };\n    },\n\n    /**\n     * inOutCirc tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutCirc easing function\n     */\n    inOutCirc() {\n        return function inOutCirc(t) {\n            t *= 2;\n            if (t < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\n            return 0.5 * (Math.sqrt(1 - (t - 2) * (t - 2)) + 1);\n        };\n    },\n\n    /**\n     * inElastic tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @param {number} [a=0.1] - a\n     * @param {number} [p=0.4] - p\n     * @returns {function} - New instance of inElastic easing function\n     */\n    inElastic(a = 0.1, p = 0.4) {\n        return function inElastic(t) {\n            let s;\n\n            if (t === 0) return 0;\n            if (t === 1) return 1;\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            } else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n\n            return -(a * Math.pow(2, 10 * (t - 1)) * Math.sin(((t - 1) - s) * (2 * Math.PI) / p));\n        };\n    },\n\n    /**\n     * outElastic tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @param {number} [a=0.1] - a\n     * @param {number} [p=0.4] - p\n     * @returns {function} - New instance of outElastic easing function\n     */\n    outElastic(a = 0.1, p = 0.4) {\n        return function outElastic(t) {\n            let s;\n\n            if (t === 0) return 0;\n            if (t === 1) return 1;\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            } else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n\n            return (a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1);\n        };\n    },\n\n    /**\n     * inOutElastic tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @param {number} [a=0.1] - a\n     * @param {number} [p=0.4] - p\n     * @returns {function} - New instance of inOutElastic easing function\n     */\n    inOutElastic(a = 0.1, p = 0.4) {\n        return function inOutElastic(t) {\n            let s;\n\n            if (t === 0) return 0;\n            if (t === 1) return 1;\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            } else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            t *= 2;\n            if (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t - 1)) * Math.sin(((t - 1) - s) * (2 * Math.PI) / p));\n\n            return a * Math.pow(2, -10 * (t - 1)) * Math.sin(((t - 1) - s) * (2 * Math.PI) / p) * 0.5 + 1;\n        };\n    },\n\n    /**\n     * inBack tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @param {number} [v=1.70158] - v\n     * @returns {function} - New instance of inBack easing function\n     */\n    inBack(v = 1.70158) {\n        return function inBack(t) {\n            const s = v;\n\n            return t * t * ((s + 1) * t - s);\n        };\n    },\n\n    /**\n     * outBack tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @param {number} [v=1.70158] - v\n     * @returns {function} - New instance of outBack easing function\n     */\n    outBack(v = 1.70158) {\n        return function outBack(t) {\n            const s = v;\n\n            return --t * t * ((s + 1) * t + s) + 1;\n        };\n    },\n\n    /**\n     * inOutBack tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @param {number} [v=1.70158] - v\n     * @returns {function} - New instance of inOutBack easing function\n     */\n    inOutBack(v = 1.70158) {\n        return function inOutBack(t) {\n            const s = v * 1.525;\n\n            t *= 2;\n            if (t < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\n            return 0.5 * ((t - 2) * (t - 2) * ((s + 1) * (t - 2) + s) + 2);\n        };\n    },\n\n    /**\n     * inBounce tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inBounce easing function\n     */\n    inBounce() {\n        return function inBounce(t) {\n            return 1 - Easing.outBounce()(1 - t);\n        };\n    },\n\n    /**\n     * outBounce tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of outBounce easing function\n     */\n    outBounce() {\n        return function outBounce(t) {\n            if (t < (1 / 2.75)) {\n                return 7.5625 * t * t;\n            } else if (t < (2 / 2.75)) {\n                t = (t - (1.5 / 2.75));\n\n                return 7.5625 * t * t + 0.75;\n            } else if (t < (2.5 / 2.75)) {\n                t = (t - (2.25 / 2.75));\n\n                return 7.5625 * t * t + 0.9375;\n            }\n            t -= (2.625 / 2.75);\n\n            return 7.5625 * t * t + 0.984375;\n        };\n    },\n\n    /**\n     * inOutBounce tween\n     *\n     * @memberof PIXI.tween.Easing\n     * @returns {function} - New instance of inOutBounce easing function\n     */\n    inOutBounce() {\n        return function inOutBounce(t) {\n            if (t < 0.5) return Easing.inBounce()(t * 2) * 0.5;\n\n            return Easing.outBounce()(t * 2 - 1) * 0.5 + 0.5;\n        };\n    },\n};\n\nexport default Easing;\n","import Tween from './Tween';\n\n/**\n * Tween manager class, that handles updating child Tweens\n *\n * @class\n * @memberof PIXI.tween\n */\nexport default class TweenManager {\n    /** */\n    constructor() {\n        /** @member {Array.<PIXI.tween.Tween>} - The array of tweens being manager */\n        this.tweens = [];\n\n        this._tweensToDelete = [];\n        this._last = 0;\n    }\n\n    /**\n     * Updating of the tween manager, which will in turn update any active tweens\n     *\n     * @param {number} [deltaMS] - If not provided, an internal deltaMS will be calculated\n     */\n    update(deltaMS) {\n        if (!deltaMS && deltaMS !== 0) {\n            deltaMS = this._getDeltaMS();\n        }\n\n        for (let i = 0; i < this.tweens.length; ++i) {\n            const tween = this.tweens[i];\n\n            if (tween.active) {\n                tween.update(deltaMS);\n            }\n\n            if (tween.isEnded && tween.expire) {\n                tween.remove();\n            }\n        }\n\n        if (this._tweensToDelete.length) {\n            for (let i = 0; i < this._tweensToDelete.length; ++i) {\n                this._remove(this._tweensToDelete[i]);\n            }\n            this._tweensToDelete.length = 0;\n        }\n    }\n\n    /**\n     * Returns an array with all the tweens for the given target.\n     *\n     * @param {any} target - The target object to check for tweens\n     * @returns {Array.<PIXI.tween.Tween>} - Tweens attached to the given target\n     */\n    getTweensForTarget(target) {\n        const tweens = [];\n\n        for (let i = 0; i < this.tweens.length; ++i) {\n            if (this.tweens[i].target === target) {\n                tweens.push(this.tweens[i]);\n            }\n        }\n\n        return tweens;\n    }\n\n    /**\n     * Returns a new tween instance that is managed by this tween manager.\n     *\n     * @param {any} target - The target object to add a tween to\n     * @param {PIXI.tween.Tween#tweenConfig} [config] - object to configure the tween\n     * @returns {PIXI.tween.Tween} - New tween instance\n     */\n    createTween(target, config) {\n        return new Tween(target, this, config);\n    }\n\n    /**\n     * Normally you want to use .createTween(target) to create a tween, but, you can also create a tween\n     * with new PIXI.Tween(target) and add it in the manager with this method.\n     *\n     * @param {PIXI.tween.Tween} tween - Tween to add\n     */\n    addTween(tween) {\n        if (tween) {\n            tween.manager = this;\n            this.tweens.push(tween);\n        }\n    }\n\n    /**\n     * Removes a tween from being managed by this instance\n     *\n     * @param {PIXI.tween.Tween} tween - Tween to remove\n     */\n    removeTween(tween) {\n        if (tween) {\n            this._tweensToDelete.push(tween);\n        }\n    }\n\n    /**\n     * Delets the tween from the array of managed tweens\n     *\n     * @param {PIXI.tween.Tween} tween - Tween to remove\n     * @private\n     */\n    _remove(tween) {\n        const index = this.tweens.indexOf(tween);\n\n        if (index !== -1) {\n            this.tweens.splice(index, 1);\n        }\n    }\n\n    /**\n     * Returns a new tween instance that is managed by this tween manager.\n     *\n     * @returns {number} - How much time in ms has passed since update was last called\n     * @private\n     */\n    _getDeltaMS() {\n        if (this._last === 0) {\n            this._last = Date.now();\n        }\n        const now = Date.now();\n        const deltaMS = now - this._last;\n\n        this._last = now;\n\n        return deltaMS;\n    }\n}\n","/**\n * Class that allows drawing a path using PIXI.Graphics, which can then be followed and used as a tween\n *\n * @class\n * @memberof PIXI.tween\n */\nexport default class TweenPath {\n    /** */\n    constructor() {\n        /** @member {PIXI.Polygon} - PIXI object to use as the path */\n        this.polygon = new PIXI.Polygon();\n        this.polygon.closed = false;\n\n        /** @member {PIXI.GraphicsData} - Current path */\n        this.currentPath = null;\n\n        /** @member {Array.<PIXI.GraphicsData>} - Graphics data */\n        this.graphicsData = [];\n\n        /**\n         * @member {boolean}\n         * Used to detect if the graphics object has changed.\n         * If this is set to true then the graphics object will be recalculated.\n         */\n        this.dirty = true;\n\n        this._closed = false;\n        this._tmpPoint = new PIXI.Point();\n        this._tmpPoint2 = new PIXI.Point();\n        this._tmpDistance = [];\n    }\n\n    /**\n     * Set true to close your path\n     *\n     * @member {boolean}\n     */\n    get closed() {\n        return this._closed;\n    }\n\n    set closed(value) { // eslint-disable-line require-jsdoc\n        if (this._closed === value) {\n            return;\n        }\n        this.polygon.closed = value;\n        this._closed = value;\n        this.dirty = true;\n    }\n\n    /**\n     * The number of points along the path\n     *\n     * @member {number}\n     * @readonly\n     */\n    get length() {\n        return (this.polygon.points.length) ? (this.polygon.points.length / 2) + ((this._closed) ? 1 : 0) : 0;\n    }\n\n    /**\n     * Clear the path\n     * Moves the current drawing position to x, y.\n     * @see https://pixijs.github.io/docs/PIXI.Graphics.html#moveTo\n     *\n     * @param {number} x - the X coordinate to move to\n     * @param {number} y - the Y coordinate to move to\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    moveTo(x, y) {\n        PIXI.Graphics.prototype.moveTo.call(this, x, y);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws a line using the current line style from the current drawing position to (x, y);\n     * The current drawing position is then set to (x, y).\n     * @see https://pixijs.github.io/docs/PIXI.Graphics.html#lineTo\n     *\n     * @param {number} x - the X coordinate to draw to\n     * @param {number} y - the Y coordinate to draw to     *\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    lineTo(x, y) {\n        PIXI.Graphics.prototype.lineTo.call(this, x, y);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     * @see https://pixijs.github.io/docs/PIXI.Graphics.html#quadraticCurveTo\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    quadraticCurveTo(cpX, cpY, toX, toY) {\n        PIXI.Graphics.prototype.quadraticCurveTo.call(this, cpX, cpY, toX, toY);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Calculate the points for a bezier curve and then draws it.\n     * @see https://pixijs.github.io/docs/PIXI.Graphics.html#bezierCurveTo\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y     *\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n        PIXI.Graphics.prototype.bezierCurveTo.call(this, cpX, cpY, cpX2, cpY2, toX, toY);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     * @see https://pixijs.github.io/docs/PIXI.Graphics.html#arcTo\n     *\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    arcTo(x1, y1, x2, y2, radius) {\n        PIXI.Graphics.prototype.arcTo.call(this, x1, y1, x2, y2, radius);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     * @see https://pixijs.github.io/docs/PIXI.Graphics.html#arc\n     *\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\n        PIXI.Graphics.prototype.arc.call(this, cx, cy, radius, startAngle, endAngle, anticlockwise);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Draws the given shape to this TweenPath object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    drawShape(shape) {\n        PIXI.Graphics.prototype.drawShape.call(this, shape);\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * Clear the path\n     *\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    clear() {\n        this.graphicsData.length = 0;\n        this.currentPath = null;\n        this.polygon.points.length = 0;\n        this._closed = false;\n        this.dirty = false;\n\n        return this;\n    }\n\n    /**\n     * Parse the list of points from the path\n     *\n     * @returns {PIXI.tween.TweenPath} - This instance of TweenPath\n     */\n    parsePoints() {\n        if (!this.dirty) {\n            return this;\n        }\n        this.dirty = false;\n        this.polygon.points.length = 0;\n        for (let i = 0; i < this.graphicsData.length; ++i) {\n            const shape = this.graphicsData[i].shape;\n\n            if (shape && shape.points) {\n                this.polygon.points = this.polygon.points.concat(shape.points);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Finds the nth point along the path\n     *\n     * @param {PIXI.Point} num - Point\n     * @returns {PIXI.Point} - Point co-ordinates\n     */\n    getPoint(num) {\n        this.parsePoints();\n        const len = (this.closed && num >= this.length - 1) ? 0 : num * 2;\n\n        this._tmpPoint.set(this.polygon.points[len], this.polygon.points[len + 1]);\n\n        return this._tmpPoint;\n    }\n\n    /**\n     * Finds the nth point along the path\n     *\n     * @param {PIXI.Point} num - Point\n     * @returns {PIXI.Point} - Point co-ordinates\n     */\n    getPointAt(num) {\n        this.parsePoints();\n        if (num > this.length) {\n            return this.getPoint(this.length - 1);\n        }\n\n        if (num % 1 === 0) {\n            return this.getPoint(num);\n        }\n        this._tmpPoint2.set(0, 0);\n        const diff = num % 1;\n        const { x: ceilX, y: ceilY } = this.getPoint(Math.ceil(num));\n        const { x: floorX, y: floorY } = this.getPoint(Math.floor(num));\n\n        const xx = -((floorX - ceilX) * diff);\n        const yy = -((floorY - ceilY) * diff);\n\n        this._tmpPoint2.set(floorX + xx, floorY + yy);\n\n        return this._tmpPoint2;\n    }\n\n    /**\n     * Finds the distance between two points\n     *\n     * @param {PIXI.Point} num1 - First point\n     * @param {PIXI.Point} num2 - Second point\n     * @returns {number} - Distance in pixels\n     */\n    distanceBetween(num1, num2) {\n        this.parsePoints();\n        const { x: p1X, y: p1Y } = this.getPoint(num1);\n        const { x: p2X, y: p2Y } = this.getPoint(num2);\n        const dx = p2X - p1X;\n        const dy = p2Y - p1Y;\n\n        return Math.sqrt((dx * dx) + (dy * dy));\n    }\n\n    /**\n     * Calculates the total distance along the entire path\n     *\n     * @returns {number} - Distance in pixels\n     */\n    totalDistance() {\n        this.parsePoints();\n        this._tmpDistance.length = 0;\n        this._tmpDistance.push(0);\n\n        const len = this.length;\n        let distance = 0;\n\n        for (let i = 0; i < len - 1; ++i) {\n            distance += this.distanceBetween(i, i + 1);\n            this._tmpDistance.push(distance);\n        }\n\n        return distance;\n    }\n\n    /**\n     * Finds the nearest point for the distance to be travelled\n     *\n     * @param {number} distance - how far to travel\n     * @returns {PIXI.Point} - Point co-ordinates\n     */\n    getPointAtDistance(distance) {\n        this.parsePoints();\n        if (!this._tmpDistance) {\n            this.totalDistance();\n        }\n        const len = this._tmpDistance.length;\n        let n = 0;\n\n        const totalDistance = this._tmpDistance[this._tmpDistance.length - 1];\n\n        if (distance < 0) {\n            distance = totalDistance + distance;\n        } else if (distance > totalDistance) {\n            distance = distance - totalDistance;\n        }\n\n        for (let i = 0; i < len; ++i) {\n            if (distance >= this._tmpDistance[i]) {\n                n = i;\n            }\n\n            if (distance < this._tmpDistance[i]) break;\n        }\n\n        if (n === this.length - 1) {\n            return this.getPointAt(n);\n        }\n\n        const diff1 = distance - this._tmpDistance[n];\n        const diff2 = this._tmpDistance[n + 1] - this._tmpDistance[n];\n\n        return this.getPointAt(n + (diff1 / diff2));\n    }\n}\n","import TweenManager from './TweenManager';\nimport Tween from './Tween';\nimport TweenPath from './TweenPath';\nimport Easing from './Easing';\n\n// extend pixi graphics to draw tweenPaths\nPIXI.Graphics.prototype.drawPath = function drawPath(path) {\n    path.parsePoints();\n    this.drawShape(path.polygon);\n\n    return this;\n};\n\n/**\n * @namespace PIXI.tween\n */\nconst tween = {\n    TweenManager,\n    Tween,\n    Easing,\n    TweenPath,\n};\n\nif (!PIXI.tweenManager) {\n    PIXI.tweenManager = new TweenManager();\n\n    PIXI.tween = tween;\n}\n\nexport default tween;\n"],"names":["_recursiveApplyTween","to","from","target","time","elapsedTime","easing","k","_isObject","b","c","t","_parseRecursiveData","obj","Object","prototype","toString","call","Easing","Math","cos","PI","sin","pow","sqrt","a","p","s","asin","v","outBounce","inBounce","Tween","manager","config","addTo","clear","linear","expire","repeat","loop","delay","pingPong","path","pathReverse","speed","_active","_isStarted","_isEnded","_to","_from","_resetFromOnStart","_delayTime","_elapsedTime","_progress","_repeat","_pingPong","_pathFrom","_pathTo","_chainTween","_resolvePromise","this","babelHelpers.typeof","on","end","pingpong","start","stop","update","addTween","removeTween","resolve","Promise","emit","_end","data","tween","deltaMS","_canUpdate","_parseData","ended","_apply","realElapsed","min","resolvePromise","distance","totalDistance","d","pos","getPointAtDistance","position","set","x","y","PIXI","utils","EventEmitter","TweenManager","tweens","_tweensToDelete","_last","_getDeltaMS","i","length","active","isEnded","remove","_remove","push","index","indexOf","splice","Date","now","TweenPath","polygon","Polygon","closed","currentPath","graphicsData","dirty","_closed","_tmpPoint","Point","_tmpPoint2","_tmpDistance","Graphics","moveTo","lineTo","cpX","cpY","toX","toY","quadraticCurveTo","cpX2","cpY2","bezierCurveTo","x1","y1","x2","y2","radius","arcTo","cx","cy","startAngle","endAngle","anticlockwise","arc","shape","drawShape","points","concat","num","parsePoints","len","getPoint","diff","ceil","ceilX","ceilY","floor","floorX","floorY","xx","yy","num1","num2","p1X","p1Y","dx","dy","distanceBetween","n","getPointAt","diff1","diff2","value","drawPath","tweenManager"],"mappings":"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"}